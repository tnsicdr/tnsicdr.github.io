---
import type { CollectionEntry } from "astro:content";
import { IconCalendar, IconCategory } from "@tabler/icons-react";
import { unified } from "unified";
import remarkParse from "remark-parse";
import remarkGfm from "remark-gfm";
import remarkStringify from "remark-stringify";
import stripMarkdown from "strip-markdown";
import remarkUnlink from "remark-unlink";
import { remFactor } from "../../shared/sizing/metrics";

interface Props {
  post: CollectionEntry<"blog">;
  excerpt?: boolean;
}

const { post, excerpt = false } = Astro.props;
const { Content } = await post.render();
const contentExcerpt = await unified()
  .use(remarkParse)
  .use(remarkUnlink)
  .use(remarkGfm)
  .use(stripMarkdown)
  .use(remarkStringify)
  .process(post.body);
---

<div>
  <div class="metadata">
    <div class="title">
      {
        excerpt ? (
          <a href={`/posts/${post.slug}`} rel="prefetch">
            {post.data.title}
          </a>
        ) : (
          post.data.title
        )
      }
    </div>
    <div class="date">
      <IconCalendar size={remFactor(1)} />{post.data.date.toLocaleDateString()}
    </div>
    {
      post.data.tags ? (
        <div class="tags-container">
          <IconCategory size={remFactor(1)} />
          <ul class="tags">
            {post.data.tags.map((tag) => (
              <li>
                <a href={`/tag/${tag}`} rel="prefetch">
                  {tag}
                </a>
              </li>
            ))}
          </ul>
        </div>
      ) : null
    }
  </div>
  {
    excerpt ? (
      <div class="excerpt-container">
        <p class="excerpt">{contentExcerpt}</p>
        <div class="excerpt-actions">
          <a href={`/posts/${post.slug}`} rel="prefetch">
            Read More
          </a>
        </div>
      </div>
    ) : (
      <div class="content-container">
        <Content />
      </div>
    )
  }
</div>
<style lang="scss">
  .metadata {
    margin-bottom: 0.5rem;
  }
  .title {
    font-size: 2rem;
    font-weight: 600;
  }
  .date {
    align-items: center;
    display: flex;
    flex-direction: row;
    font-size: 1rem;
    gap: 0.25rem;
  }
  .tags-container {
    align-items: center;
    display: flex;
    flex-direction: row;
  }
  .tags {
    display: flex;
    flex-direction: row;
    gap: 0.25rem;
    margin-left: 0.25rem;

    li {
      background-color: var(--widget-bg);
      border-radius: 0.25em;
      padding: 0em 0.25em;

      a {
        color: var(--text-color);
      }

      &:hover {
        background-color: var(--primary);
      }
    }
  }

  .excerpt-container {
    display: flex;
    flex-direction: column;
  }

  .excerpt-actions {
    align-self: flex-end;
    a {
      text-decoration: none;
    }
  }

  .excerpt {
    display: -webkit-box;
    margin: 0;
    margin-bottom: 0.5rem;
    overflow: hidden;
    padding: 0;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
  }
</style>
<style lang="scss" is:global>
  .content-container {
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      margin-bottom: 1em;
    }

    pre.astro-code {
      border-radius: 0.5rem;
      margin-bottom: 1em;
      padding: 1em;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-weight: 600;
    }

    ul {
      list-style: disc;
      margin-block-start: 1em;
      margin-block-end: 1em;
      padding-inline-start: 2em;
    }

    ol {
      margin-block-start: 1em;
      margin-block-end: 1em;
      padding-inline-start: 2em;
    }

    .footnotes {
      ol {
        padding-inline-start: 1em;

        li {
          font-size: 0.75rem;
        }
      }
      p {
        font-size: 0.75rem;
        margin: 0;
      }
    }
  }
</style>
